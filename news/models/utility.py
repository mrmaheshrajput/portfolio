import re

stopwords = {'therefore', 'these', 'r', 'into', 'it', 'has', 'was', 'here', 'they', 'at', 'before', 'since', 'otherwise', "shouldn't", "i'm", "you'd", "they'll", 'both', 'yours', 'then', 'when', 'didn', 'ourselves', 'yourself', 'during', "wasn't", 'the', 'from', "you'll", 'our', "she's", 'having', 'him', 'my', 'so', "hasn't", "mustn't", 'your', 'however', 'further', 're', 'ours', 've', 'and', 'aren', 'some', 'o', 'them', 'that', 'all', "weren't", 'such', 'below', 'not', 'who', 'over', 'don', 'won', 'against', 'do', 'on', 'this', 'whom', 'were', 'to', 'theirs', 'she', 'those', "she'll", "you're", "he'd", "they'd", 'above', 'himself', 'being', 'doing', "doesn't", 'where', 'did', 'why', 'too', 'should', 'now', 'mustn', 'with', "couldn't", "we'll", 'ma', 'again', 'just', 'how', 'up', "should've", 'doesn', 'after', 'weren', 'also', 'what', 'out', 'there', 'ain', 'get', 'other', "isn't", "they've", 'd', 'his', 'he', "how's", 'shall', 'k', 'themselves', 'itself', 'down', 'under', 'haven', "we've", "he'll", 'is', 'few', 'about', 'hadn', 'until', "needn't", "can't", "didn't", 'else', "don't", 'couldn', 'be', "there's", "what's", 'for', "i'll", 'll', "i've", 'their', 'its', 'hasn', 'shouldn', 'by', "here's", 'me', 'very', "hadn't", 'com', 'than', 'http', 'nor', 'been', "i'd", 't', 'of', "who's", 'only', 'hence', "she'd", "we're", 'like', 'herself', 'does', "you've", 'each', 'shan', 'we', "haven't", "won't", 'while', 'own', 'can', "we'd", 'an', 'am', 'cannot', 'had', 'most', 'are', 's', 'wasn', 'myself', 'or', "when's", 'between', 'would', 'will', 'have', 'because', "wouldn't", 'mightn', "they're", 'but', 'you', "mightn't", 'which', 'could', 'more', "aren't", "it's", 'needn', 'www', 'any', 'same', "where's", "that's", 'a', 'wouldn', "shan't", 'y', 'i', 'ought', "that'll", 'through', 'her', 'in', 'isn', "he's", "why's", 'off', 'yourselves', 'm', 'no', 'ever', 'hers', 'if', 'once', 'as', "let's"}

def clean(text):

    text = re.sub("http\S+", '', str(text))

    # Contractions ref: https://www.kaggle.com/gunesevitan/nlp-with-disaster-tweets-eda-cleaning-and-bert

    text = re.sub(r"he's", "he is", str(text))
    text = re.sub(r"there's", "there is", str(text))
    text = re.sub(r"We're", "We are", str(text))
    text = re.sub(r"That's", "That is", str(text))
    text = re.sub(r"won't", "will not", str(text))
    text = re.sub(r"they're", "they are", str(text))
    text = re.sub(r"Can't", "Cannot", str(text))
    text = re.sub(r"wasn't", "was not", str(text))
    text = re.sub(r"aren't", "are not", str(text))
    text = re.sub(r"isn't", "is not", str(text))
    text = re.sub(r"What's", "What is", str(text))
    text = re.sub(r"haven't", "have not", str(text))
    text = re.sub(r"hasn't", "has not", str(text))
    text = re.sub(r"There's", "There is", str(text))
    text = re.sub(r"He's", "He is", str(text))
    text = re.sub(r"It's", "It is", str(text))
    text = re.sub(r"You're", "You are", str(text))
    text = re.sub(r"I'M", "I am", str(text))
    text = re.sub(r"shouldn't", "should not", str(text))
    text = re.sub(r"wouldn't", "would not", str(text))
    text = re.sub(r"i'm", "I am", str(text))
    text = re.sub(r"I'm", "I am", str(text))
    text = re.sub(r"Isn't", "is not", str(text))
    text = re.sub(r"Here's", "Here is", str(text))
    text = re.sub(r"you've", "you have", str(text))
    text = re.sub(r"we're", "we are", str(text))
    text = re.sub(r"what's", "what is", str(text))
    text = re.sub(r"couldn't", "could not", str(text))
    text = re.sub(r"we've", "we have", str(text))
    text = re.sub(r"who's", "who is", str(text))
    text = re.sub(r"y'all", "you all", str(text))
    text = re.sub(r"would've", "would have", str(text))
    text = re.sub(r"it'll", "it will", str(text))
    text = re.sub(r"we'll", "we will", str(text))
    text = re.sub(r"We've", "We have", str(text))
    text = re.sub(r"he'll", "he will", str(text))
    text = re.sub(r"Y'all", "You all", str(text))
    text = re.sub(r"Weren't", "Were not", str(text))
    text = re.sub(r"Didn't", "Did not", str(text))
    text = re.sub(r"they'll", "they will", str(text))
    text = re.sub(r"they'd", "they would", str(text))
    text = re.sub(r"DON'T", "DO NOT", str(text))
    text = re.sub(r"they've", "they have", str(text))
    text = re.sub(r"i'd", "I would", str(text))
    text = re.sub(r"should've", "should have", str(text))
    text = re.sub(r"where's", "where is", str(text))
    text = re.sub(r"we'd", "we would", str(text))
    text = re.sub(r"i'll", "I will", str(text))
    text = re.sub(r"weren't", "were not", str(text))
    text = re.sub(r"They're", "They are", str(text))
    text = re.sub(r"let's", "let us", str(text))
    text = re.sub(r"it's", "it is", str(text))
    text = re.sub(r"can't", "cannot", str(text))
    text = re.sub(r"don't", "do not", str(text))
    text = re.sub(r"you're", "you are", str(text))
    text = re.sub(r"i've", "I have", str(text))
    text = re.sub(r"that's", "that is", str(text))
    text = re.sub(r"i'll", "I will", str(text))
    text = re.sub(r"doesn't", "does not", str(text))
    text = re.sub(r"i'd", "I would", str(text))
    text = re.sub(r"didn't", "did not", str(text))
    text = re.sub(r"ain't", "am not", str(text))
    text = re.sub(r"you'll", "you will", str(text))
    text = re.sub(r"I've", "I have", str(text))
    text = re.sub(r"Don't", "do not", str(text))
    text = re.sub(r"I'll", "I will", str(text))
    text = re.sub(r"I'd", "I would", str(text))
    text = re.sub(r"Let's", "Let us", str(text))
    text = re.sub(r"you'd", "You would", str(text))
    text = re.sub(r"It's", "It is", str(text))
    text = re.sub(r"Ain't", "am not", str(text))
    text = re.sub(r"Haven't", "Have not", str(text))
    text = re.sub(r"Could've", "Could have", str(text))
    text = re.sub(r"youve", "you have", str(text))

    # Others
    text = re.sub("U.S.", "United States", str(text))
    text = re.sub("Dec", "December", str(text))
    text = re.sub("Jan.","January", str(text))

    # Punctuations & special characters
    text = re.sub("[^A-Za-z0-9]+"," ", str(text))

    # Stop word removal
    text = " ".join(str(i).lower() for i in text.split() if i.lower() not in stopwords)

    return text
